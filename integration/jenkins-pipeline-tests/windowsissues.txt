Running Powershell : 

PS C:\Users\chhen> Get-Host | Select-Object Version                                                                     
Version
-------
5.1.18362.628


PS C:\Users\chhen>   

PS C:\DAta\git\apg-gradle-plugins\integration\jenkins-pipeline-tests> .\gradlew.bat --version                           
------------------------------------------------------------
Gradle 5.2.1
------------------------------------------------------------

Build time:   2019-02-08 19:00:10 UTC
Revision:     f02764e074c32ee8851a4e1877dd1fea8ffb7183

Kotlin DSL:   1.1.3
Kotlin:       1.3.20
Groovy:       2.5.4
Ant:          Apache Ant(TM) version 1.9.13 compiled on July 10 2018
JVM:          1.8.0_242 ( 25.242-b08)
OS:           Windows 10 10.0 amd64

Docker: 

 docker --version
Docker version 19.03.5, build 633a0ea


Docker System: 

PS C:\Data\git\apg-gradle-plugins> docker system info
Client:
 Debug Mode: false
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 28
 Server Version: 19.03.5
 Storage Driver: overlay2
  Backing Filesystem: extfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339
 runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657
 init version: fec3683
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 4.19.76-linuxkit
 Operating System: Docker Desktop
 OSType: linux
 Architecture: x86_64
 CPUs: 2
 Total Memory: 1.943GiB
 Name: docker-desktop
 ID: XJKJ:ADOO:5H7G:AWTH:VA7R:FRQE:HDWA:ZIBH:VXBC:KIEO:B7D3:GP3Q
 Docker Root Dir: /var/lib/docker
 Debug Mode: true
  File Descriptors: 34
  Goroutines: 51
  System Time: 2020-03-05T15:12:13.334228161Z
  EventsListeners: 3
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false
 Product License: Community Engine

PS C:\DAta\git\apg-gradle-plugins\integration\jenkins-pipeline-tests>  

1. Commands: 

 3 cd C:\Data\
   4 cd .\git\
   5 dir
   6 rmdir /S .\apg-gradle-plugins\
   7 rmdir .\apg-gradle-plugins\
   8 dir
   9 pwd
  10 git clone https://github.com/apgsga-it/apg-gradle-plugins.git
  11 cd .\apg-gradle-plugins\
  12 dir
  13 cd .\integration\
  14 dir
  15 cd .\jenkins-pipeline-tests\
  16 dir
  17 .\gradlew.bat clean jenkinsAll:run --info --stacktrace
  18 docker system prune -a
  19 .\gradlew.bat clean jenkinsAll:createNetwork
  20 .\gradlew.bat clean jenkinsAll:run --info --stacktrace

2. Issue encountered on first try (17) :

Step 8/9 : RUN ./createUser.sh
 ---> Running in 73af88ba7f04
/bin/sh: ./createUser.sh: /bin/bash^M: bad interpreter: No such file or directory


> Task :jenkinsAll:buildSshdImage FAILED
:jenkinsAll:buildSshdImage (Thread[Execution worker for ':',5,main]) completed. Took 1 mins 14.064 secs.

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':jenkinsAll:buildSshdImage'.
> Could not build image: The command '/bin/sh -c ./createUser.sh' returned a non-zero code: 126

Resolution: 

In Visual Studio Code -. Changed in integration\jenkins-pipeline-tests\src\docker\sshd\createUser.sh CRLF to LF 

3. Then i did'nt have any problems 
4. I added a println to pipeline, which i saw in the output
5.  .\gradlew.bat clean jenkinsBuild:run --info --stacktrace 
fine too 
6. .\gradlew.bat clean jenkinPkgAndD

Weploy:run --info --stacktrace 
Issue : 
STDOUT: + ./gradlew clean buildRpm deployRpm --info --stacktrace -PinstallTarget=CHTI211 -PserviceVersion=2.0 -PreleaseNr=10 -PtargetHost=installTarget -PsshUser=tu1 -PsshPw=tu1_pass -PdownloadDir=/tmp
STDOUT: /usr/bin/env: ΓÇÿsh\rΓÇÖ: No such file or directory
STDOUT: [Pipeline] }
STDOUT: [Pipeline] // dir
STDOUT: [Pipeline] }
STDOUT: [Pipeline] // stage
STDOUT: [Pipeline] }
STDOUT: [Pipeline] // node
STDOUT: [Pipeline] End of Pipeline
STDOUT: ERROR: script returned exit code 127
STDOUT: Finished: FAILURE
:jenkinsPkgAndDeploy:logJenkinsRunnerContainer (Thread[Execution worker for ':',5,main]) completed. Took 15.31 secs.
7. Visual Studio Code :  changed integration\modules\testapp-pkg\gradlew crlf to lf 
8. .\gradlew.bat clean jenkinPkgAndDeploy:run --info --stacktrace  
Issue: 
OUT: Using 2 worker leases.
STDOUT:
STDOUT: FAILURE: Build failed with an exception.
STDOUT:
STDOUT: * What went wrong:
STDOUT: Could not create service of type FileAccessTimeJournal using GradleUserHomeScopeServices.createFileAccessTimeJournal().
STDOUT: > java.io.IOException: Input/output error
STDOUT:
STDOUT: * Try:
STDOUT: Run with --debug option to get more log output. Run with --scan to get full insights.
STDOUT:
STDOUT: * Exception is:
STDOUT: org.gradle.internal.service.ServiceCreationException: Could not create service of type FileAccessTimeJournal using GradleUserHomeScopeServices.createFileAccessTimeJournal().



Which probably has to do with Gradlehome Isolation you are working on : Both the Docker Image Gradle Build the actual gradle Build which is running Docker are accessing the same cache. 