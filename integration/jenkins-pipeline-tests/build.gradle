plugins {
    id 'java'
    id "nu.studer.credentials" version "2.1"
}

class JenkinsRunnerExec extends JavaExec {
    @Input
    public def workspaceDir

    @Input def appArgs = []

    @Input def jenkinsWorkspaceDirPath = "${project.projectDir.absolutePath}/../modules"

    @Override
    void exec() {
        args = [
                "${project.projectDir}/runner/bin/jenkinsfile-runner-standalone.jar",
                "-w",
                "${project.projectDir}/runner/jenkins/war/jenkins.war",
                "-p",
                "${project.projectDir}/runner/jenkins/plugins",
                "--runWorkspace", "${jenkinsWorkspaceDirPath}",
                "-f","${project.projectDir}/${workspaceDir}"
        ] + appArgs
        logging.captureStandardOutput LogLevel.INFO
        logging.captureStandardError LogLevel.ERROR
        main = "-jar"
        super.exec();
    }

}

task runTestLibHelloWorld(type: JenkinsRunnerExec) {
    workspaceDir = "jenkinsHelloWorldLib"
    environment = [CASC_JENKINS_CONFIG:"${project.projectDir}/runner/config/jenkins.yaml"]
}


task runTestPkgAndDeploy(type: JenkinsRunnerExec) {
    appArgs = ["-a", "baseVersion=1.0",
                      "-a", "rpmReleaseNr=${rpmReleaseNr}",
                      "-a", "bomLastRevision=SNAPSHOT",
                      "-a", "installTarget=${installTarget}",
                      "-a", "targetHost=${targetHost}",
                      "-a", "sshUser=${sshUser}",
                      "-a", "sshPw=${sshPw}",
                      "-a", "downLoadDir=${downLoadDir}"]
    workspaceDir = "jenkinsPkgAndDeploy"
}

task runTestBuild(type: JenkinsRunnerExec) {
    appArgs = ["-a", "modules=testapp-bom:testapp-parentpom:testapp-module:testapp-service"]
    workspaceDir = "jenkinsBuild"
}

