import com.apgsga.revision.manager.domain.RevisionManagerBuilder

plugins {
	id("com.apgsga.common.repo")
	id("com.apgsga.rpm.package")
	id("com.apgsga.ssh")
	id("com.apgsga.version.resolver")
	id "nu.studer.credentials" version "2.1"
}

project.ext {
	targetHost = project.hasProperty('targetHost') ? project.property('targetHost') : "jadas-e.apgsga.ch"
	sshUser = project.hasProperty('sshUser') ? project.property('sshUser') : "deployUser"
	sshPw = project.hasProperty('sshPw') ? project.property('sshPw') : "deployUserPassword"
	installTarget = project.hasProperty('installTarget') ? project.property('installTarget') : "CHEI212"
	bomLastRevision = project.hasProperty('bomLastRevision') ? project.property('bomLastRevision') : "SNAPSHOT"
	patchParentDir = project.hasProperty('patchParentDir') ? project.property('patchParentDir') : project.buildDir.absolutePath
	patchFileNames = project.hasProperty('patchFileNames') ? project.property('patchFileNames') : ""
	buildTyp = project.hasProperty('buildTyp') ? project.property('buildTyp') : "PATCH"
	rpmReleaseNr = project.hasProperty('rpmReleaseNr') ? project.property('rpmReleaseNr') : "2"
	downloadDir = project.hasProperty('downloadDir') ? project.property('downloadDir') : "downloads"
	mavenProfile = project.hasProperty('mavenProfile') ? project.property('mavenProfile') : "artifactory"
}
println "targetHost = ${project.ext.targetHost}"
println "installTarget = ${project.ext.installTarget}"
println "bomLastRevision = ${project.ext.bomLastRevision}"
println "rpmReleaseNr = ${project.ext.rpmReleaseNr}"
println "downloadDir = ${project.ext.downloadDir}"

apply from : "${project.gradle.gradleUserHomeDir}/common/portnr.gradle"

configurations {
	serviceRuntime.exclude group: 'log4j', module: 'log4j'
	serviceRuntime.exclude group: 'org.neo4j' , module: 'neo4j-ogm'
	serviceRuntime.exclude group: 'org.neo4j' , module: 'neo4j-ogm'
	serviceRuntime.exclude group: 'org.codehaus.groovy' , module: 'groovy-all'
}

apgVersionResolver {
	bomArtifactId = 'dm-bom'
	bomGroupId = 'com.affichage.common.maven'
	bomBaseVersion = '9.1.0.DIGIFLEX'
	bomLastRevision = project.ext.bomLastRevision
	algorithm = project.ext.buildTyp == "PATCH" ? RevisionManagerBuilder.AlgorithmTyp.PATCH : RevisionManagerBuilder.AlgorithmTyp.SNAPSHOT
	patches {
		parentDir = project.ext.patchParentDir
		fileNames = project.ext.patchFileNames
	}
}

mavenSettings {
	activeProfiles = project.ext.mavenProfile
}

apgPackage {
	name = "digiflex-web-it21"
	configurationName = "serviceRuntime"
	dependencies = [
		"com.apgsga.vk.digiflex:apg-vk-digiflex-web"
	]
	resourceFilters = "serviceport:it21db-webui:interapp:javamelody"
	appConfigFilters = "general:webui"
	it21DbDaoLocations = "com/affichage/vaadin/**"
	resourcesPath = "resources"
	installTarget = project.ext.installTarget
	mainProgramName  = "com.affichage.vaadin.vk.VkWebApplication"
	releaseNr = project.ext.rpmReleaseNr
}

apgSshConfig {
	username project.ext.sshUser
	userpwd credentials."${project.ext.sshUser}Pw"
	destinationHost project.ext.targetHost
}

apgRpmDeployConfig {
	rpmFilePath "${buildDir}/distributions/"
	rpmFileName "${apgPackage.archiveName}"
	remoteDestFolder "${project.ext.downloadDir}"
}

// TODO (che, jhe , 2.4.20) test version, needs to be adopted acccordingly
publishing {
	publications {
		bom(MavenPublication) {
			apgVersionResolver.generateBom { }
		}
	}
	repositories {
		maven {
			url "${new File(buildDir, 'local-repo').toURL()}"
		}
	}
}
