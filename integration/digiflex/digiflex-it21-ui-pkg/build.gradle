import com.apgsga.gradle.repo.extensions.RepoType
import com.apgsga.revision.manager.domain.RevisionManagerBuilder

plugins {
	id("com.apgsga.gui.package")
	id("com.apgsga.publish")
	id("com.apgsga.ssh")
	id("com.apgsga.version.resolver")
	id "nu.studer.credentials" version "2.1"
	id 'java'
}

project.ext {
	installTarget = project.hasProperty('installTarget') ? project.property('installTarget') : "CHTI216"
	sshUser = project.hasProperty('sshUser') ? project.property('sshUser') : 'deployUser'
	sshPw = project.hasProperty('sshPw') ? project.property('sshPw') : "deployPw"
	targetHost = project.hasProperty('targetHost') ? project.property('targetHost') : "jadas-t.apgsga.ch"
	bomLastRevision = project.hasProperty('bomLastRevision') ? project.property('bomLastRevision') : "SNAPSHOT"
	patchParentDir = project.hasProperty('patchParentDir') ? project.property('patchParentDir') : project.buildDir.absolutePath
	patchFileNames = project.hasProperty('patchFileNames') ? project.property('patchFileNames') : ""
	buildTyp = project.hasProperty('buildTyp') ? project.property('buildTyp') : "PATCH"
	downloadDir = project.hasProperty('downloadDir') ? project.property('downloadDir') : "/home/apg_install/downloads"
	baseVersion = project.hasProperty('baseVersion') ? project.property('baseVersion') : "0.1"
	installDir = project.hasProperty('installDir') ? project.property('installDir') : "/opt/digiflex_ui/${project.ext.installTarget}/${project.ext.baseVersion}"
}

println "installTarget = ${project.ext.installTarget}"

apgSshConfig {
	username credentials."${project.ext.sshUser}"
	userpwd credentials."${project.ext.sshPw}"
	destinationHost project.ext.targetHost
}

apgZipDeployConfig {
	zipFilePath "./build/distributions"
	zipFileName "digiflex-it21-ui-${project.ext.baseVersion}.zip"
	remoteDeployDestFolder project.ext.downloadDir
	remoteExtractDestFolder project.ext.installDir
}

apgRepos {
	// TODO (che, 27.2) : Profiles needed
	config(RepoType.MAVEN,[REPO_NAME:"testrepo", REPO_BASE_URL:"/Users/chhex/maven"])
	config(RepoType.MAVEN_RELEASE,[REPO_NAME:"repo", REPO_BASE_URL:"https://artifactory4t4apgsga.jfrog.io/artifactory4t4apgsga",REPO_USER:"dev",REPO_PASSWORD:credentials.devPw])
	config(RepoType.MAVEN_SNAPSHOT,[REPO_NAME:"snapshot", REPO_BASE_URL:"https://artifactory4t4apgsga.jfrog.io/artifactory4t4apgsga",REPO_USER:"dev",REPO_PASSWORD:credentials.devPw])
}


apgRepositories {
	mavenLocal()
	artifactory()
}

configurations {
	serviceRuntime
}
configurations.serviceRuntime {
	 resolutionStrategy {
		 force 'org.springframework:spring-web:4.3.18.RELEASE'
	 }
}


apgVersionResolver {
	bomArtifactId = 'dm-bom'
	bomGroupId = 'com.affichage.common.maven'
	bomBaseVersion = '9.1.0.DIGIFLEX'
	bomLastRevision = project.ext.bomLastRevision
	installTarget = project.ext.installTarget
	algorithm =  project.ext.buildTyp == "PATCH" ? RevisionManagerBuilder.AlgorithmTyp.PATCH : RevisionManagerBuilder.AlgorithmTyp.SNAPSHOT
	patches {
		parentDir = project.ext.patchParentDir
		fileNames = project.ext.patchFileNames
	}
}


apgPackage {
	name = 'digiflex-it21-ui'
	configurationName = "serviceRuntime"
	dependencies = [
		"com.affichage.it21.ui:it21-ui-runtime",
		"com.apgsga.it21.ui.mdt:it21ui-app-starter",
		"com.apgsga.it21.ui.mdt:javaforms-starter",
		"org.springframework.boot:spring-boot-starter-tomcat",
		"moyosoft:moyocore_x64:3.0.4:@dll"
	]
	resourcesPath = "resources"
	mainProgramName  = "com.affichage.it21.ui.runtime.It21GuiRuntimeStarter"
	version = project.ext.baseVersion
}


// TODO (che, jhe , 2.4.20) test version, needs to be adopted acccordingly
publishing {
	publications {
		bom(MavenPublication) {
			apgVersionResolver.generateBom { }
		}
	}
	repositories {
		maven {
			url "${new File(buildDir, 'local-repo').toURL()}"
		}
	}
}
