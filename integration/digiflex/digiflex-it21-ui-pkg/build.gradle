import com.apgsga.gradle.repo.extensions.RepoType
import com.apgsga.revision.manager.domain.RevisionManagerBuilder

plugins {
	id("com.apgsga.gui.package")
	id("com.apgsga.publish")
	id("com.apgsga.ssh")
	id("com.apgsga.version.resolver")
	id "nu.studer.credentials" version "2.1"
}


project.ext {
	installTarget = project.hasProperty('installTarget') ? project.property('installTarget') : "CHEI212"
	targetHost = project.hasProperty('targetHost') ? project.property('targetHost') : "localhost"
	sshUser = project.hasProperty('sshUser') ? project.property('sshUser') : 'dev'
	targetHost = project.hasProperty('targetHost') ? project.property('targetHost') : "jadas-e.apgsga.ch"
	sshUser = project.hasProperty('sshUser') ? project.property('sshUser') : "deployUser"
	sshPw = project.hasProperty('sshPw') ? project.property('sshPw') : "deployUserPassword"
	bomLastRevision = project.hasProperty('bomLastRevision') ? project.property('bomLastRevision') : "SNAPSHOT"
	patchParentDir = project.hasProperty('patchParentDir') ? project.property('patchParentDir') : project.buildDir.absolutePath
	patchFileNames = project.hasProperty('patchFileNames') ? project.property('patchFileNames') : ""
	revisionRootPath = project.hasProperty('revisionRootPath') ? project.property('revisionRootPath') : project.buildDir.absolutePath
	downloadDir = project.hasProperty('downloadDir') ? project.property('downloadDir') : "/Daten/Downloads"
	installDir = project.hasProperty('installDir') ? project.property('installDir') : "/Daten/Programme"
}

println "installTarget = ${project.ext.installTarget}"

apgRepos {
	// TODO (che, 27.2) : Profiles needed
	config(RepoType.MAVEN,[REPO_NAME:"testrepo", REPO_BASE_URL:"/Users/chhex/maven"])
	config(RepoType.MAVEN_RELEASE,[REPO_NAME:"repo", REPO_BASE_URL:"https://artifactory4t4apgsga.jfrog.io/artifactory4t4apgsga",REPO_USER:"dev",REPO_PASSWORD:credentials.devPw])
	config(RepoType.MAVEN_SNAPSHOT,[REPO_NAME:"snapshot", REPO_BASE_URL:"https://artifactory4t4apgsga.jfrog.io/artifactory4t4apgsga",REPO_USER:"dev",REPO_PASSWORD:credentials.devPw])
}


apgRepositories {
	mavenLocal()
	artifactory()
}

configurations.all {
	 resolutionStrategy {	
		 force 'org.springframework:spring-web:4.3.18.RELEASE'
	 }
}


apgVersionResolver {
	bomArtifactId = 'dm-bom'
	bomGroupId = 'com.affichage.common.maven'
	bomBaseVersion = '9.1.0.ADMIN-UIMIG'
	bomLastRevision = project.ext.bomLastRevision
	installTarget = project.ext.installTarget
	algorithm =  RevisionManagerBuilder.AlgorithmTyp.PATCH
	patches {
		parentDir = project.ext.patchParentDir
		fileNames = project.ext.patchFileNames
	}
	revisionRootPath = project.buildDir.absolutePath
}


apgPackage {
	pkgName = 'digiflex-it21-ui'
	dependencies = [
		"com.affichage.it21.ui:it21-ui-runtime:9.1.0.DIGIFLEX-SNAPSHOT",
		"com.apgsga.it21.ui.mdt:it21ui-app-starter:9.1.0.DIGIFLEX-SNAPSHOT",
		"com.apgsga.it21.ui.mdt:javaforms-starter:9.1.0.DIGIFLEX-SNAPSHOT",
		"org.springframework.boot:spring-boot-starter-tomcat:1.5.3.RELEASE",
		"moyosoft:moyocore_x64:3.0.4:@dll",
	]
	resourcesPath = "resources"
	mainProgramm  = "com.affichage.it21.ui.runtime.It21GuiRuntimeStarter"
}

apgGenericPublishConfig {
	artefactFile =  file ("${buildDir}/distributions/${apgPackage.archiveName}")
	local()
}


