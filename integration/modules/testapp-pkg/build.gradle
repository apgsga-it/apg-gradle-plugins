plugins {
	id("com.apgsga.rpm.package")
	id("com.apgsga.publish")
	id("com.apgsga.rpm.ssh.deployer")
	id("com.apgsga.version.resolver")
}

project.ext {
	targetHost = project.hasProperty('targetHost') ? project.property('targetHost') : "jadas-e.apgsga.ch"
	sshUser = project.hasProperty('sshUser') ? project.property('sshUser') : "deployUser"
	sshPw = project.hasProperty('sshPw') ? project.property('sshPw') : "deployUserPassword"
	installTarget = project.hasProperty('installTarget') ? project.property('installTarget') : "CHEI212"
    serviceVersion = project.hasProperty('serviceVersion') ? project.property('serviceVersion') : "1.0"
	releaseNr = project.hasProperty('releaseNr') ? project.property('releaseNr') : "2"
	downloadDir = project.hasProperty('downloadDir') ? project.property('downloadDir') : "downloads"
}
println "targetHost = ${project.ext.targetHost}"
println "installTarget = ${project.ext.installTarget}"
println "serviceVersion = ${project.ext.serviceVersion}"
println "releaseNr = ${project.ext.releaseNr}"
println "downloadDir = ${project.ext.downloadDir}"

apgRepositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	serviceRuntime.exclude group: 'log4j', module: 'log4j'
	serviceRuntime.exclude group: 'org.neo4j' , module: 'neo4j-ogm'
	serviceRuntime.exclude group: 'org.neo4j' , module: 'neo4j-ogm'
	serviceRuntime.exclude group: 'org.codehaus.groovy' , module: 'groovy-all'
}

apgVersionResolver {
	bomArtifactId = 'test-composite-bom'
	bomGroupId = 'test'
	bomBaseVersion = '9.1.0.ADMIN-UIMIG'
	revisionAlogrithm = project.ext.revisionAlogrithm
	installTarget = project.ext.installTarget
	patches {
		parentDir = project.ext.patchParentDir
		fileNames = project.ext.patchFiles
	}
}


apgMavenPublish {
	artefactId = versionResolvers.bomArtifactId
	version = versionResolvers.targetBomVersion
	groupId =  versionResolvers.bomGroupId
	local()
	artifactory()

}

apgPackage {
	serviceName = 'echoservice'
	configurationName = "serviceRuntime"
	dependencies = [
		"com.apgsga.testapp:testapp-service"
    ]
	resourceFilters = "serviceport"
	appConfigFilters = "general"
  	servicePropertiesDir = "resources"
	installTarget = project.ext.installTarget
	mainProgramName  = "com.apgsga.testapp.TestappApplication"
	version = project.ext.serviceVersion 
	releaseNr = project.ext.releaseNr
}

apgPackage.log()


apgGenericPublishConfig {
	artefactFile =  file ("${buildDir}/distributions/${apgPackage.archiveName}")
	local()
}



apgGenericPublishConfig.log()

apgSshCommon {
	username credentials."${project.ext.sshUser}"
	userpwd credentials."${project.ext.sshPw}"
	destinationHost project.ext.targetHost

}

apgRpmDeployConfig {
	allowAnyHosts = true
	rpmFilePath "${buildDir}/distributions/"
	rpmFileName "${apgPackage.archiveName}"
	remoteDestFolder "${project.ext.downloadDir}"
}

