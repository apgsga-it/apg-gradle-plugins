
parameters {
    string(name: 'TARGET', defaultValue: 'CHEI212', description: 'Installations Target')
    string(name: 'VERSION', defaultValue: '0.1-SNAPSHOT', description: 'Version Nummer')
    string(name: 'SERVICENAME', defaultValue: 'echoservice', description: 'Name of Service')
    string(name: 'SERVICENAME', defaultValue: 'echoservice', description: 'Name of Service')
}
stage("Build and Deploy ${params.SERVICENAME} for ${params.TARGET}") {
    node {
        sh "chmod +x ./gradlew"
        sh "./gradlew clean buildRpm buildRpm -PinstallTarget=${params.TARGET} -PserviceName=${params.TARGET} -Pversion=${params.VERSION} -PreleaseNr=200${env.BUILD_NUMBER}"
    }
}
stage("Install ${params.SERVICENAME} on ${params.TARGET}") {
    withCredentials([usernamePassword(credentialsId:'jadas-e-ssh', passwordVariable: 'passwd', usernameVariable: 'username')])   { 
        def remote = [:]
        remote.name = 'jadas-e'
        remote.host = 'lxewi161.apgsga.ch'
        remote.user = username
        remote.password = passwd
        remote.allowAnyHosts = true
        def serviceToInstall = "apg-${params.SERVICENAME}-service-${params.TARGET}"
        echo "Installation of ${serviceToInstall} starting , executing over ssh ..."
        def yumCmdOptions = "--disablerepo=* --enablerepo=apg-digiflex-snapshot"
        def yumCleanCmd = "yum clean all"
        def yumInstallCmd = "yum -y install ${yumCmdOptions} ${serviceToInstall}"
        node {
            sshCommand remote: remote , command:  "${yumCleanCmd}", sudo: true
            sshCommand remote: remote , command:  "${yumInstallCmd}", sudo: true
        }
        echo "Installation of ${serviceToInstall} done!"
    }
}

